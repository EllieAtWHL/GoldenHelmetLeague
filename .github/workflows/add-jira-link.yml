name: Enforce Jira Key in PR

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  check-jira-key:
    runs-on: ubuntu-latest

    steps:
      - name: Check branch name for Jira key
        id: check
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          echo "Branch name: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" =~ ([A-Z]+-[0-9]+) ]]; then
            echo "key=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "No Jira key found in branch name: $BRANCH_NAME"
            exit 1
          fi

      - name: Fail with comment if no Jira key
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "‚ùå This PR does not contain a Jira key in the branch name.\n\nPlease rename your branch to include a Jira key (e.g. `ABC-123-feature-name`)."
            })

      - name: Add Jira link to PR body
        if: steps.check.outputs.key != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const key = "${{ steps.check.outputs.key }}";
            const jiraUrl = `https://eleanormatthewman.atlassian.net/browse/${key}`;

            // Prepend Jira Issue section if not already in PR body
            let newBody = pr.body || "";
            if (!newBody.includes(jiraUrl)) {
              newBody = `## Jira Issue\n- [${key}](${jiraUrl})\n\n---\n` + newBody;
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                body: newBody
              });
            }
